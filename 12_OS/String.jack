// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array str;
    field int length;

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        let str = Array.new(maxLength);
        let length = 0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do str.dispose();
    }

    /** Returns the current length of this string. */
    method int length() {
        return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let str[j] = c;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let str[length] = c;
        let length = length + 1;
        return str;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let length = length - 1;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int i, sum, digit;
        let i = 0;
        let sum = 0;

        while (i < this.length()){
            digit = str[i] - 48;    // convert ascii to int
            let sum =  (10 * sum) + digit;
            let i = i + 1;
        }
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int divider, quotient, remainder;
        
        let divider = 1; 

        while (divider * 10 < val){
            let divider = divider * 10;
        }  

        let quotient = val / divider;
        let remainder = val - (divider * quotient);
            
        if (val < 10){
            return (val + 48);
        }
        else{
            return setInt(val/10).append(remainder + 48);
        }
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}

