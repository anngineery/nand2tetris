// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load ,sel=address[11..13] ,a=r0Load ,b=r1Load ,c=r2Load ,d=r3Load ,e=r4Load ,f=r5Load ,g=r6Load ,h=r7Load);
    
    RAM4K(in=in, load=r0Load, address=address[0..11], out=r0out);
    RAM4K(in=in, load=r1Load, address=address[0..11], out=r1out);
    RAM4K(in=in, load=r2Load, address=address[0..11], out=r2out);
    RAM4K(in=in, load=r3Load, address=address[0..11], out=r3out);
    RAM4K(in=in, load=r4Load, address=address[0..11], out=r4out);
    RAM4K(in=in, load=r5Load, address=address[0..11], out=r5out);
    RAM4K(in=in, load=r6Load, address=address[0..11], out=r6out);
    RAM4K(in=in, load=r7Load, address=address[0..11], out=r7out);

    Mux8Way16(a=r0out, b=r1out, c=r2out, d=r3out, e=r4out, f=r5out, g=r6out, h=r7out, sel=address[11..13], out=out);
}